LerChar:
ENTER 0,0
PUSHA
MOV EAX, 3
MOV EBX, 0
MOV ECX, [EBP + 8]
MOV EDX, 1
INT 80h
POPA
LEAVE
RET

EscreverChar:
ENTER 0,0
PUSHA
MOV EAX, 4
MOV EBX, 1
MOV ECX, [EBP + 8]
MOV EDX, 1
INT 80h
POPA
LEAVE
RET

LerString:
ENTER 0,0

PUSH EBX
PUSH ECX
PUSH EDX

MOV EAX,0
MOV EDX, [EBP + 8]
ADD EDX, 1

Loop:
MOV ECX,[EBP + 12]
MOV EBX,EAX
ADD ECX,EBX
PUSH ECX
CALL LerChar
ADD ESP,4
INC EAX
CMP DWORD [ECX], 0xa
JE  Exit
CMP EAX, EDX
JNE Loop

Exit:
MOV DWORD [ECX], 0

POP EDX
POP ECX
POP EBX

ADD ESP, 4
LEAVE
RET

EscreverString:
ENTER 0,0
MOV EAX, 4
MOV EBX, 1
MOV ECX, [EBP + 12]
MOV EDX, [EBP + 8]
INT 80h
LEAVE
RET

LerInteiro:
ENTER 0,0
MOV EAX, 3
MOV EBX, 0
MOV ECX, [EBP + 8]
MOV EDX, 3
INT 80h
MOV EAX, [ECX + 2]
MOV BL, AL
SUB EBX, '0'
MOV EAX, [ECX + 1]
MOV DL, AL
SUB EDX, '0'
MOV EAX, 10
IMUL EDX
ADD EBX, EAX
MOV EAX, [ECX]
MOV DL, AL
SUB EDX, '0'
MOV EAX, 100
IMUL EDX
ADD EBX, EAX
LEAVE
RET 4

EscreverInteiro:
ENTER 0,0
MOV EAX, 4
MOV EBX, 1
MOV ECX, [EBP + 8]
MOV EDX, 3
INT 80h
LEAVE
RET 4